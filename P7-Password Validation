cmd
node -v
nvm list(16,22)
22(NO)>nvm install 22.17.0>nvm use 22
create folder in desktop>open cmd>
npx create-react-app project name
cd project name
npm start
src>App.js
import React, { useState } from "react";
import "./App.css";

function App() {
  const [form, setForm] = useState({ username: "", email: "", password: "", confirmPassword: "" });
  const [errors, setErrors] = useState({});
  const [submitted, setSubmitted] = useState(false);

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });

  const validate = () => {
    let err = {};
    if (!form.username) err.username = "Username required";
    if (!/\S+@\S+\.\S+/.test(form.email)) err.email = "Invalid email";
    if (form.password.length < 6) err.password = "Min 6 chars";
    if (form.password !== form.confirmPassword) err.confirmPassword = "Passwords do not match";
    return err;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const valErrors = validate();
    setErrors(valErrors);
    setSubmitted(Object.keys(valErrors).length === 0);
  };

  return (
    <div className="container">
      <h2>React Form Validation</h2>
      <form onSubmit={handleSubmit}>
        {["username", "email", "password", "confirmPassword"].map((field) => (
          <div key={field} className="form-control">
            <label>{field === "confirmPassword" ? "Confirm Password" : field}</label>
            <input
              type={field.includes("password") ? "password" : "text"}
              name={field}
              value={form[field]}
              onChange={handleChange}
            />
            {errors[field] && <small>{errors[field]}</small>}
          </div>
        ))}
        <button type="submit">Submit</button>
      </form>

      {submitted && (
        <div className="output">
          <h3>Form Submitted</h3>
          <p>Username: {form.username}</p>
          <p>Email: {form.email}</p>
        </div>
      )}
    </div>
  );
}

export default App;

src>App.css
.container {
  max-width: 400px;
  margin: 80px auto;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  background: #fff;
  font-family: Arial, sans-serif;
}

h2, h3 {
  text-align: center;
  margin-bottom: 20px;
}

.form-control {
  margin-bottom: 15px;
}

label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

input {
  width: 100%;
  padding: 10px;
  font-size: 15px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  width: 100%;
  padding: 10px;
  background: #5cb85c;
  color: white;
  border: none;
  font-size: 16px;
  cursor: pointer;
  border-radius: 4px;
}

button:hover {
  background: #4cae4c;
}

small {
  color: red;
  font-size: 13px;
}

.output {
  margin-top: 20px;
  padding: 10px;
  border-top: 1px solid #ccc;
}

